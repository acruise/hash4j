plugins {
    id 'java'
    id 'java-library'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'com.diffplug.spotless' version '6.4.1'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
    withJavadocJar()
    withSourcesJar()
}

group = 'com.dynatrace.hash4j'
version = '0.2.0'

spotless {
    ratchetFrom 'origin/main'
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat('1.15.0')
        licenseHeaderFile 'docs/licenses/HEADER.txt'
    }
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'dynatrace-oss_hash4j'
    property 'sonar.organization', 'dynatrace-oss'
    property 'sonar.host.url', 'https://sonarcloud.io'
  }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    testImplementation group: 'org.hipparchus', name: 'hipparchus-stat', version: '2.0'
    testImplementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    testImplementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    testImplementation group: 'net.openhft', name: 'zero-allocation-hashing', version: '0.15'
    testImplementation group: 'com.appmattus.crypto', name: 'cryptohash', version: '0.10.0'
}

jacocoTestReport { // necessary for sonarcloud coverage
    reports {
        xml.required = true
        csv.required = true
    }
}
test {
    useJUnitPlatform()
}

tasks.test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

sourceSets {
    main
    test
}

javadoc {
    failOnError true
    title 'hash4j ' + project.version + ' API'
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
                counter = 'LINE'
            }
            limit {
                minimum = 1.0
                counter = 'BRANCH'
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'com.dynatrace.hash4j:hash4j'
                description = 'hash4j: A Dynatrace hash library for Java'
                url = 'https://github.com/dynatrace-oss/hash4j'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Dynatrace'
                        name = 'Dynatrace LLC'
                        email = 'opensource@dynatrace.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/dynatrace-oss/hash4j.git'
                    developerConnection = 'scm:git:ssh://github.com/dynatrace-oss/hash4j.git'
                    url = 'https://github.com/dynatrace-oss/hash4j'
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(System.getenv('GPG_PRIVATE_KEY'), System.getenv('GPG_PASSPHRASE'))
    sign publishing.publications.mavenJava
}

nexusPublishing {
    packageGroup = 'com.dynatrace'
    useStaging = true
    repositories {
        sonatype {
            nexusUrl = uri('https://oss.sonatype.org/service/local/')
            snapshotRepositoryUrl = uri('https://oss.sonatype.org/content/repositories/snapshots/')
            username = System.getenv('OSSRH_USERNAME')
            password = System.getenv('OSSRH_PASSWORD')
        }
    }
}
